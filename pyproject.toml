[project]
name = "treeson"
version = "0.1.1"
description = "Convert directory structures and GitHub repositories to JSON format"
authors = [
    { name = "Sergio Bonatto", X = "@fiBonatto"  }
]
maintainers = [
    { name = "Sergio Bonatto", X = "@fiBonatto" }
]
license = { text = "MIT" }
readme = "README.md"
homepage = "https://github.com/SergioBonatto/treeson"
repository = "https://github.com/SergioBonatto/treeson"
documentation = "https://github.com/SergioBonatto/treeson#readme"
changelog = "https://github.com/SergioBonatto/treeson/blob/main/CHANGELOG.md"
requires-python = ">=3.8"
keywords = [
    "directory",
    "tree",
    "json",
    "structure",
    "github",
    "cli",
    "filesystem",
    "converter"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Filesystems",
    "Topic :: Utilities",
    "Typing :: Typed",
]

dependencies = [
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "responses>=0.23.0",
]

[project.urls]
"Homepage" = "https://github.com/SergioBonatto/treeson"
"Documentation" = "https://github.com/SergioBonatto/treeson#readme"
"Repository" = "https://github.com/SergioBonatto/treeson"
"Bug Tracker" = "https://github.com/SergioBonatto/treeson/issues"
"Changelog" = "https://github.com/SergioBonatto/treeson/blob/main/CHANGELOG.md"

[project.scripts]
treeson = "treeson.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "treeson/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["treeson"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["treeson"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["treeson"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
